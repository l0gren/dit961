name: io-streams
version: 1.5.1.0
id: io-streams-1.5.1.0-L4svx5iqm2sAkoCaHh4BZT
key: io-streams-1.5.1.0-L4svx5iqm2sAkoCaHh4BZT
license: BSD-3-Clause
maintainer: Gregory Collins <greg@gregorycollins.net>
synopsis: Simple, composable, and easy-to-use stream I/O
description:
    /Overview/
    .
    The io-streams library contains simple and easy-to-use primitives for I/O
    using streams. Most users will want to import the top-level convenience
    module "System.IO.Streams", which re-exports most of the library:
    .
    @
    import           System.IO.Streams (InputStream, OutputStream)
    import qualified System.IO.Streams as Streams
    @
    .
    For first-time users, @io-streams@ comes with an included tutorial, which can
    be found in the "System.IO.Streams.Tutorial" module.
    .
    /Features/
    .
    The @io-streams@ user API has two basic types: @InputStream a@ and
    @OutputStream a@, and three fundamental I/O primitives:
    .
    @
    \-\- read an item from an input stream
    Streams.read :: InputStream a -> IO (Maybe a)
    .
    \-\- push an item back to an input stream
    Streams.unRead :: a -> InputStream a -> IO ()
    .
    \-\- write to an output stream
    Streams.write :: Maybe a -> OutputStream a -> IO ()
    @
    .
    Streams can be transformed by composition and hooked together with provided combinators:
    .
    @
    ghci> Streams.fromList [1,2,3::Int] >>= Streams.map (*10) >>= Streams.toList
    [10,20,30]
    @
    .
    Stream composition leaves the original stream accessible:
    .
    @
    ghci> input \<- Streams.fromByteString \"long string\"
    ghci> wrapped \<- Streams.takeBytes 4 input
    ghci> Streams.read wrapped
    Just \"long\"
    ghci> Streams.read wrapped
    Nothing
    ghci> Streams.read input
    Just \" string\"
    @
    .
    Simple types and operations in the IO monad mean straightforward and simple
    exception handling and resource cleanup using Haskell standard library
    facilities like 'Control.Exception.bracket'.
    .
    @io-streams@ comes with:
    .
    * functions to use files, handles, concurrent channels, sockets, lists,
    vectors, and more as streams.
    .
    * a variety of combinators for wrapping and transforming streams, including
    compression and decompression using zlib, controlling precisely how many
    bytes are read from or written to a stream, buffering output using
    bytestring builders, folds, maps, filters, zips, etc.
    .
    * support for parsing from streams using @attoparsec@.
    .
    * support for spawning processes and communicating with them using streams.
category: Data, Network, IO-Streams
abi: 59179fa01cb5d1584544d04e068e374e
exposed: True
exposed-modules:
    System.IO.Streams System.IO.Streams.Attoparsec
    System.IO.Streams.Attoparsec.ByteString
    System.IO.Streams.Attoparsec.Text System.IO.Streams.Builder
    System.IO.Streams.ByteString System.IO.Streams.Combinators
    System.IO.Streams.Concurrent System.IO.Streams.Core
    System.IO.Streams.Debug System.IO.Streams.File
    System.IO.Streams.Handle System.IO.Streams.Internal
    System.IO.Streams.List System.IO.Streams.Network
    System.IO.Streams.Process System.IO.Streams.Text
    System.IO.Streams.Tutorial System.IO.Streams.Vector
    System.IO.Streams.Zlib
hidden-modules: System.IO.Streams.Internal.Attoparsec
                System.IO.Streams.Internal.Network
                System.IO.Streams.Internal.Search
import-dirs: C:\Users\Emil\Documents\code\School\DIT961\Lab4\.cabal-sandbox\x86_64-windows-ghc-8.6.5\io-streams-1.5.1.0-L4svx5iqm2sAkoCaHh4BZT
library-dirs: C:\Users\Emil\Documents\code\School\DIT961\Lab4\.cabal-sandbox\x86_64-windows-ghc-8.6.5\io-streams-1.5.1.0-L4svx5iqm2sAkoCaHh4BZT
              "C:\\Program Files\\Haskell Platform\\8.6.5\\mingw\\lib"
dynamic-library-dirs: C:\Users\Emil\Documents\code\School\DIT961\Lab4\.cabal-sandbox\x86_64-windows-ghc-8.6.5
                      "C:\\Program Files\\Haskell Platform\\8.6.5\\mingw\\lib"
data-dir: C:\Users\Emil\Documents\code\School\DIT961\Lab4\.cabal-sandbox\x86_64-windows-ghc-8.6.5\io-streams-1.5.1.0
hs-libraries: HSio-streams-1.5.1.0-L4svx5iqm2sAkoCaHh4BZT
include-dirs: "C:\\Program Files\\Haskell Platform\\8.6.5\\mingw\\include"
depends:
    attoparsec-0.13.2.4-GhUuxBcVLthKS7VBKcKfON base-4.12.0.0
    bytestring-0.10.8.2
    bytestring-builder-0.10.8.2.0-LXPF26JUtha6ldoXSbK1uZ
    network-3.1.1.1-Izwsyk64OoDBVuRysfRa9D
    primitive-0.7.0.1-7UVCe77PZDULAacS5A0yIT process-1.6.5.0
    text-1.2.3.1 time-1.8.0.2 transformers-0.5.6.2
    vector-0.12.1.2-AuJJnhPdZ8v8Pbif0WpLt6
    zlib-bindings-0.1.1.5-LMaXkiWOuBQTwGmNvazDg
haddock-interfaces: C:\Users\Emil\Documents\code\School\DIT961\Lab4\.cabal-sandbox\doc\x86_64-windows-ghc-8.6.5\io-streams-1.5.1.0\html\io-streams.haddock
haddock-html: C:\Users\Emil\Documents\code\School\DIT961\Lab4\.cabal-sandbox\doc\x86_64-windows-ghc-8.6.5\io-streams-1.5.1.0\html
